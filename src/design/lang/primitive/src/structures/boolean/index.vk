#external tagged Boolean {
    True,
    False
}

type bool = Boolean;
type true = Boolean::True;
type false = Boolean::False;

#external extends bool {
    def is_true(self) -> bool {
        @matches(self, true)
    }
    def is_false(self) -> bool {
        @matches(self, false)
    }

    def then(self) -> bool {

    }
}

#external extends bool: Neg {
    def neg(mut self) {
    // match self {
    //     case true: false,
    //     case false: true
    // }
    }
}