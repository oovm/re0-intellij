<idea-plugin>
	<id>Valkyrie</id>
	<name>Valkyrie Language</name>
	<vendor>voml</vendor>
	<depends>com.intellij.modules.platform</depends>
	<!--  <depends optional="true" config-file="plugin-with-rust.xml">org.rust.lang</depends>-->
	<resource-bundle>messages.ValkyrieBundle</resource-bundle>
	<extensions defaultExtensionNs="com.intellij">
		<fileType
			name="Valkyrie"
			language="Valkyrie"
			extensions="vk;"
			implementationClass="restart.ide.file.ValkyrieFileType"
			fieldName="INSTANCE"
		/>
		<lang.parserDefinition
			language="Valkyrie"
			implementationClass="restart.language.lexer.ValkyrieParserDefinition"
		/>
		<!-- Project -->
		<indexedRootsProvider implementation="restart.ide.project.ExtraIndexContributor"/>
		<additionalLibraryRootsProvider implementation="restart.ide.project.LibraryRootsProvider"/>
		<!-- StructureView -->
		<iconProvider implementation="restart.ide.file.ValkyrieIconProvider"/>
		<projectViewNestingRulesProvider implementation="restart.ide.file.ValkyrieFileGroup"/>
		<treeStructureProvider implementation="restart.ide.view.VStructureProvider"/>
		<lang.structureViewExtension implementation="restart.ide.view.VStructureViewExtension"/>
		<lang.psiStructureViewFactory
			language="Valkyrie"
			implementationClass="restart.ide.view.StructureViewFactory"/>
		<typeHierarchyProvider
			language="Valkyrie"
			implementationClass="restart.ide.reference.hierarchy.TypeHierarchyProvider"/>
		<methodHierarchyProvider
			language="Valkyrie"
			implementationClass="restart.ide.reference.hierarchy.MethodHierarchyProvider"/>
		<callHierarchyProvider
			language="Valkyrie"
			implementationClass="restart.ide.reference.hierarchy.CallHierarchyProvider"/>
		<!-- Highlight -->
		<colorSettingsPage implementation="restart.settings.VHighlightSetting"/>
		<highlightVisitor implementation="restart.ide.highlight.NodeHighlighter"/>
		<lang.syntaxHighlighter
			language="Valkyrie"
			implementationClass="restart.ide.highlight.TokenHighlight"
		/>
		<!-- Formatter -->
		<lang.formatter
			language="Valkyrie"
			implementationClass="restart.ide.formatter.FormatBuilder"
		/>
		<lang.commenter
			language="Valkyrie"
			implementationClass="restart.ide.formatter.Commenter"
		/>
		<lang.smartEnterProcessor
			language="Valkyrie"
			implementationClass="restart.ide.formatter.SmartEnter"
		/>
		<!-- Goto -->
		<navbar implementation="restart.ide.goto.VNavigationBarExtension"/>
		<lang.directNavigationProvider implementation="restart.ide.goto.VDirectNavigationProvider"/>
		<symbolNavigation
			forClass="restart.language.symbol.ValkyrieSymbol"
			implementationClass="restart.ide.goto.VSymbolNavigationProvider"/>
		<!-- Hint -->
		<codeInsight.parameterNameHints
			language="Valkyrie"
			implementationClass="restart.ide.hint.ValkyrieParameterHintProvider"/>
		<codeInsight.inlayProvider
			language="Valkyrie"
			implementationClass="restart.ide.hint.InlayHintProvider"/>
		<vcs.codeVisionLanguageContext
			language="Valkyrie"
			implementationClass="restart.ide.hint.ValkyrieInlayVSCProvider"/>
		<!--		<psi.fileReferenceHelper implementation="restart.ide.reference.ValkyrieFileReference"/>-->
		<psi.referenceContributor implementation="restart.ide.reference.ValkyrieReferenceContributor"/>
		<psi.symbolReferenceProvider
			anyReferenceClass="true"
			implementationClass="restart.ide.reference.ValkyrieReferenceProvider"
			hostLanguage="Valkyrie"
			hostElementClass="com.intellij.psi.xml.XmlAttributeValue"
			targetClass="restart.language.symbol.ValkyrieSymbol"/>
		<!-- Declaration -->
		<typeDeclarationProvider implementation="restart.ide.reference.DeclarationProvider"/>
		<psi.declarationProvider implementation="restart.ide.reference.ValkyrieDeclarationProvider"/>
		<findUsagesHandlerFactory implementation="restart.ide.usages.ValkyrieUsagesFactory"/>
		<lang.findUsagesProvider
			language="Valkyrie"
			implementationClass="restart.ide.usages.ValkyrieUsagesProvider"/>
		<!-- Completion -->
		<codeCompletionConfigurable instance="restart.ide.completion.VCompletionConfigurable"/>
		<completion.contributor
			language="Valkyrie"
			implementationClass="restart.ide.completion.VCompletionContributor"/>
		<lang.braceMatcher
			language="Valkyrie"
			implementationClass="restart.ide.matcher.BraceMatchAdapter"/>
		<lang.quoteHandler
			language="Valkyrie"
			implementationClass="restart.ide.matcher.QuoteHandler"/>
		<lang.foldingBuilder
			language="Valkyrie"
			implementationClass="restart.ide.folding.ValkyrieFoldingBuilder"/>
		<codeFoldingOptionsProvider instance="restart.ide.folding.ValkyrieFoldingOptions"/>
		<!-- Document -->
		<lang.documentationProvider
			language="Valkyrie"
			implementationClass="restart.ide.doc.DocumentationProvider"
		/>
		<!--		<indexPatternBuilder-->
		<!--				implementation="restart.ide.todo.VomlTodoIndexPatternBuilder"-->
		<!--		/>-->
		<!--		<todoIndexer-->
		<!--				filetype="Fluent"-->
		<!--				implementationClass="restart.ide.todo.VomlTodoIndexer"-->
		<!--		/>-->
		<annotator language="Valkyrie" implementationClass="restart.ide.annotator.LiteralChecker"/>
		<langCodeStyleSettingsProvider
			implementation="restart.ide.codeStyle.ValkyrieCodeStyleSetting"
		/>
	</extensions>
	<actions>
		<action id="NewFluentFile" class="restart.ide.actions.ValkyrieCreateFile">
			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewHtmlFile"/>
		</action>
		<!--		<action id="jss.JssConvertJson" class="restart.ide.actions.FluentConvertMo"/>-->
		<!--		<group id="jss.JssGenerator" popup="true" text="JssGenerator">-->
		<!--			<reference ref="NewFluentFile"/>-->
		<!--			<reference ref="jss.JssConvertJson"/>-->
		<!--			<add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>-->
		<!--			<add-to-group group-id="ProjectViewPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>-->
		<!--			<add-to-group group-id="EditorTabPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>-->
		<!--			<add-to-group group-id="ConsoleEditorPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>-->
		<!--		</group>-->
	</actions>
</idea-plugin>
